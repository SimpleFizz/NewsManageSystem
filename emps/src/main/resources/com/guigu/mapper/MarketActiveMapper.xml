<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guigu.mapper.MarketActiveMapper" >
  <resultMap id="BaseResultMap" type="com.guigu.pojo.MarketActive" >
    <id column="active_id" property="activeId" jdbcType="INTEGER" />
    <result column="staff_id" property="staffId" jdbcType="INTEGER" />
    <result column="active_name" property="activeName" jdbcType="VARCHAR" />
    <result column="active_state" property="activeState" jdbcType="INTEGER" />
    <result column="active_start" property="activeStart" jdbcType="TIMESTAMP" />
    <result column="active_end" property="activeEnd" jdbcType="TIMESTAMP" />
    <result column="active_type" property="activeType" jdbcType="INTEGER" />
    <result column="active_coste_emtimate" property="activeCosteEmtimate" jdbcType="DOUBLE" />
    <result column="active_coste" property="activeCoste" jdbcType="DOUBLE" />
    <result column="active_refect_estimate" property="activeRefectEstimate" jdbcType="INTEGER" />
    <result column="active_student" property="activeStudent" jdbcType="VARCHAR" />
    <result column="active_content" property="activeContent" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    active_id, staff_id, active_name, active_state, active_start, active_end, active_type, 
    active_coste_emtimate, active_coste, active_refect_estimate, active_student, active_content
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guigu.pojo.MarketActiveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from market_active
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from market_active
    where active_id = #{activeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from market_active
    where active_id = #{activeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guigu.pojo.MarketActiveExample" >
    delete from market_active
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guigu.pojo.MarketActive" >
    insert into market_active (active_id, staff_id, active_name, 
      active_state, active_start, active_end, 
      active_type, active_coste_emtimate, active_coste, 
      active_refect_estimate, active_student, active_content
      )
    values (#{activeId,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{activeName,jdbcType=VARCHAR}, 
      #{activeState,jdbcType=INTEGER}, #{activeStart,jdbcType=TIMESTAMP}, #{activeEnd,jdbcType=TIMESTAMP}, 
      #{activeType,jdbcType=INTEGER}, #{activeCosteEmtimate,jdbcType=DOUBLE}, #{activeCoste,jdbcType=DOUBLE}, 
      #{activeRefectEstimate,jdbcType=INTEGER}, #{activeStudent,jdbcType=VARCHAR}, #{activeContent,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.guigu.pojo.MarketActive" >
    insert into market_active
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="activeId != null" >
        active_id,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="activeName != null" >
        active_name,
      </if>
      <if test="activeState != null" >
        active_state,
      </if>
      <if test="activeStart != null" >
        active_start,
      </if>
      <if test="activeEnd != null" >
        active_end,
      </if>
      <if test="activeType != null" >
        active_type,
      </if>
      <if test="activeCosteEmtimate != null" >
        active_coste_emtimate,
      </if>
      <if test="activeCoste != null" >
        active_coste,
      </if>
      <if test="activeRefectEstimate != null" >
        active_refect_estimate,
      </if>
      <if test="activeStudent != null" >
        active_student,
      </if>
      <if test="activeContent != null" >
        active_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="activeId != null" >
        #{activeId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="activeName != null" >
        #{activeName,jdbcType=VARCHAR},
      </if>
      <if test="activeState != null" >
        #{activeState,jdbcType=INTEGER},
      </if>
      <if test="activeStart != null" >
        #{activeStart,jdbcType=TIMESTAMP},
      </if>
      <if test="activeEnd != null" >
        #{activeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="activeType != null" >
        #{activeType,jdbcType=INTEGER},
      </if>
      <if test="activeCosteEmtimate != null" >
        #{activeCosteEmtimate,jdbcType=DOUBLE},
      </if>
      <if test="activeCoste != null" >
        #{activeCoste,jdbcType=DOUBLE},
      </if>
      <if test="activeRefectEstimate != null" >
        #{activeRefectEstimate,jdbcType=INTEGER},
      </if>
      <if test="activeStudent != null" >
        #{activeStudent,jdbcType=VARCHAR},
      </if>
      <if test="activeContent != null" >
        #{activeContent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guigu.pojo.MarketActiveExample" resultType="java.lang.Integer" >
    select count(*) from market_active
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update market_active
    <set >
      <if test="record.activeId != null" >
        active_id = #{record.activeId,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null" >
        staff_id = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.activeName != null" >
        active_name = #{record.activeName,jdbcType=VARCHAR},
      </if>
      <if test="record.activeState != null" >
        active_state = #{record.activeState,jdbcType=INTEGER},
      </if>
      <if test="record.activeStart != null" >
        active_start = #{record.activeStart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.activeEnd != null" >
        active_end = #{record.activeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.activeType != null" >
        active_type = #{record.activeType,jdbcType=INTEGER},
      </if>
      <if test="record.activeCosteEmtimate != null" >
        active_coste_emtimate = #{record.activeCosteEmtimate,jdbcType=DOUBLE},
      </if>
      <if test="record.activeCoste != null" >
        active_coste = #{record.activeCoste,jdbcType=DOUBLE},
      </if>
      <if test="record.activeRefectEstimate != null" >
        active_refect_estimate = #{record.activeRefectEstimate,jdbcType=INTEGER},
      </if>
      <if test="record.activeStudent != null" >
        active_student = #{record.activeStudent,jdbcType=VARCHAR},
      </if>
      <if test="record.activeContent != null" >
        active_content = #{record.activeContent,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update market_active
    set active_id = #{record.activeId,jdbcType=INTEGER},
      staff_id = #{record.staffId,jdbcType=INTEGER},
      active_name = #{record.activeName,jdbcType=VARCHAR},
      active_state = #{record.activeState,jdbcType=INTEGER},
      active_start = #{record.activeStart,jdbcType=TIMESTAMP},
      active_end = #{record.activeEnd,jdbcType=TIMESTAMP},
      active_type = #{record.activeType,jdbcType=INTEGER},
      active_coste_emtimate = #{record.activeCosteEmtimate,jdbcType=DOUBLE},
      active_coste = #{record.activeCoste,jdbcType=DOUBLE},
      active_refect_estimate = #{record.activeRefectEstimate,jdbcType=INTEGER},
      active_student = #{record.activeStudent,jdbcType=VARCHAR},
      active_content = #{record.activeContent,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guigu.pojo.MarketActive" >
    update market_active
    <set >
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="activeName != null" >
        active_name = #{activeName,jdbcType=VARCHAR},
      </if>
      <if test="activeState != null" >
        active_state = #{activeState,jdbcType=INTEGER},
      </if>
      <if test="activeStart != null" >
        active_start = #{activeStart,jdbcType=TIMESTAMP},
      </if>
      <if test="activeEnd != null" >
        active_end = #{activeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="activeType != null" >
        active_type = #{activeType,jdbcType=INTEGER},
      </if>
      <if test="activeCosteEmtimate != null" >
        active_coste_emtimate = #{activeCosteEmtimate,jdbcType=DOUBLE},
      </if>
      <if test="activeCoste != null" >
        active_coste = #{activeCoste,jdbcType=DOUBLE},
      </if>
      <if test="activeRefectEstimate != null" >
        active_refect_estimate = #{activeRefectEstimate,jdbcType=INTEGER},
      </if>
      <if test="activeStudent != null" >
        active_student = #{activeStudent,jdbcType=VARCHAR},
      </if>
      <if test="activeContent != null" >
        active_content = #{activeContent,jdbcType=VARCHAR},
      </if>
    </set>
    where active_id = #{activeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guigu.pojo.MarketActive" >
    update market_active
    set staff_id = #{staffId,jdbcType=INTEGER},
      active_name = #{activeName,jdbcType=VARCHAR},
      active_state = #{activeState,jdbcType=INTEGER},
      active_start = #{activeStart,jdbcType=TIMESTAMP},
      active_end = #{activeEnd,jdbcType=TIMESTAMP},
      active_type = #{activeType,jdbcType=INTEGER},
      active_coste_emtimate = #{activeCosteEmtimate,jdbcType=DOUBLE},
      active_coste = #{activeCoste,jdbcType=DOUBLE},
      active_refect_estimate = #{activeRefectEstimate,jdbcType=INTEGER},
      active_student = #{activeStudent,jdbcType=VARCHAR},
      active_content = #{activeContent,jdbcType=VARCHAR}
    where active_id = #{activeId,jdbcType=INTEGER}
  </update>
</mapper>